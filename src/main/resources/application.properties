#애플리케이션 포트 설정
server.port=80

#MySQL 연결설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/user?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234


####################################################################################
############################## auto build ############################################
####################################################################################
#Springboot auto build
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

#Thymeleaf cache 사용 중지
spring.thymeleaf.cache =false


####################################################################################
####################################################################################
####################################################################################

####################################################################################
############################## jpa 옵션  ############################################
####################################################################################
#실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true

#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#추가적인 주석을 표시하기
spring.jpa.properties.hibernate.use_sql_comments=true


#none: 아무것도 실행하지 않는다 (대부분의 DB에서 기본값이다)
#create-drop: SessionFactory가 시작될 때 drop및 생성을 실행하고, SessionFactory가 종료될 때 drop을 실행한다 (in-memory DB의 경우 기본값이다)
#create: SessionFactory가 시작될 때 데이터베이스 drop을 실행하고 생성된 DDL을 실행한다
#update: 변경된 스키마를 적용한다
#validate: 변경된 스키마가 있다면 변경점을 출력하고 애플리케이션을 종료한다
spring.jpa.hibernate.ddl-auto=create

# MySQL 상세 지정
#SQL 은 표준 SQL과 DBMS 벤더에서 제공하는 SQL 이 존재합니다. 각 공급업체에서 만든 SQL 을 방언(Dialect)이라고
#생각하면 됩니다. 우리가 사용하는 데이터베이스는 MySQL 이어서 JPA 에 MySQL8Dialect 를 사용하라고 알려줍니다.
#만약, 데이터베이스를 오라클 교체하더라도, 오라클릐 Dialectf를 설정해준다면 문제없이 애플리케이션을 구동할 수 있습니다.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
####################################################################################
####################################################################################
####################################################################################




####################################################################################
################ 페이징 처리 옵션 #####################################################
####################################################################################
# 기본 페이지 크기.
spring.data.web.pageable.default-page-size=20

# 허용되는 최대 페이지 크기.
spring.data.web.pageable.max-page-size=2000

# 1부터 시작하는 페이지 번호 인덱스 노출 및 가정 여부.
#spring.data.web.pageable.one-indexed-parameters=false
spring.data.web.pageable.one-indexed-parameters=true

# 페이지 인덱스 매개변수 이름..
spring.data.web.pageable.page-parameter=page

# 페이지 번호 및 페이지 크기 매개변수 앞에 추가할 일반 접두어
spring.data.web.pageable.prefix=

# 한정자와 실제 페이지 번호 및 크기 속성 사이에 사용할 구분 기호
spring.data.web.pageable.qualifier-delimiter=_

# 페이지 크기 매개변수 이름.
spring.data.web.pageable.size-parameter=size

#매개변수 이름을 정렬합니다.
spring.data.web.sort.sort-parameter=sort
####################################################################################
####################################################################################
####################################################################################







####################################################################################
##########################spring boot의 오류 처리에 대한 properties######################
####################################################################################
#오류 응답에 exception의 내용을 포함할지 여부 (TRUE, FALSE)
#server.error.include-exception=TRUE
#오류 응답에 stacktrace 내용을 포함할지 여부 (ALWAYS, NEVER, ON_TRACE_PARAM)
#server.error.include-stacktrace=ALWAYS
#오류 응답을 처리할 핸들러(ErrorController)의 path
#server.error.path= 
#브라우저 요청에 대해 서버 오류시 기본으로 노출할 페이지를 사용할지 여부 (TRUE, FALSE)
#server.error.whitelabel.enabled=TRUE
####################################################################################
####################################################################################
####################################################################################










